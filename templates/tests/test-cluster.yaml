apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}-cluster-prep-test
  labels:
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  {{- if .Values.test.includeAuthnSidecar }}
  - name: authenticator
    image: cyberark/conjur-authn-k8s-client
    imagePullPolicy: Always
    env:
    - name: CONTAINER_MODE
      value: sidecar
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: CONJUR_AUTHN_URL
      value: {{ .Values.conjur.applianceUrl }}/authn-k8s/{{ .Values.authnK8s.authenticatorID }}
    - name: CONJUR_ACCOUNT
      value: {{ .Values.conjur.account }}
    - name: CONJUR_AUTHN_LOGIN
      value: host/conjur/authn-k8s/{{ .Values.authnK8s.authenticatorID }}/validator
    - name: CONJUR_SSL_CERTIFICATE
      valueFrom:
        configMapKeyRef:
          name: authn-k8s-config-map
          key: conjurSslCertificate
    - name: CONJUR_TOKEN_TIMEOUT
      value: 10s
    volumeMounts:
    - mountPath: /run/conjur
      name: conjur-access-token
  {{- end }}
  - name: {{ .Release.Name }}-test
    image: diverdane/conjur-cluster-prep-test:latest
    command: ["/usr/local/bin/bats", "-t", "/tests/run.sh"]
    envFrom: 
    - configMapRef: 
        name: authn-k8s-config-map
    volumeMounts:
    - mountPath: /tests
      name: tests
      readOnly: true
  serviceAccount: {{ .Values.authnK8s.serviceAccount.name }}
  volumes:
  - name: conjur-access-token
    emptyDir:
      medium: Memory
  - name: tests
    configMap:
      name: {{ .Release.Name }}-tests-configmap
  restartPolicy: Never
